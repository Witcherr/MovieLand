<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="getMoviesByIdSQL" class="java.lang.String">
        <constructor-arg value="select m.id as id, name_rus, name_eng, description, year, rating, group_concat(distinct g.genre separator ', ') as genreList, group_concat(distinct c.name separator ', ') as countryList
                                    from movie m
                                    join genre_movie gm
                                    on m.id = gm.id_movie
                                    join genre g
                                    on gm.id_genre = g.id
                                    join country_movie cm
                                    on m.id = cm.movie_id
                                    join country c
                                    on c.id = cm.country_id
                                    where m.id = ?
                                    group by 1, 2, 3, 4, 5, 6"/>
    </bean>

    <bean id="getGenreByIdSQL" class="java.lang.String">
        <constructor-arg value="select g.id, g.genre
                                from genre g
                                join genre_movie gm
                                on g.id = gm.id_genre
                                where gm.id_movie = ?"/>
    </bean>

    <bean id="getCountryByIdSQL" class="java.lang.String">
        <constructor-arg value="select c.id, c.name
                                from country c
                                join country_movie cm
                                on c.id = cm.country_id
                                where cm.movie_id = ?"/>
    </bean>

    <bean id="getReviewByMovieIdSQL" class="java.lang.String">
        <constructor-arg value="select description
                                from review
                                where movie_id = ?"/>
    </bean>

    <bean id="getAllMoviesIdeIdSQL" class="java.lang.String">
        <constructor-arg value="select id
                                from movie"/>
    </bean>

    <bean id="getUserByNameSQL" class="java.lang.String">
        <constructor-arg value="select id, name, email, password, usertype
                                from user
                                where name = ?"/>
    </bean>

    <bean id="addReviewSQL" class="java.lang.String">
        <constructor-arg value="insert into review(movie_id, user_id, description)
                                values(?, ?, ?)"/>
    </bean>

    <bean id="checkReviewExistSQL" class="java.lang.String">
        <constructor-arg value="select count(*)
                                from review
                                where movie_id = ?
                                and user_id = ?"/>
    </bean>

    <bean id="updateReviewSQL" class="java.lang.String">
        <constructor-arg value="update review
                                set description = ?
                                where movie_id = ?
                                and user_id = ?"/>
    </bean>

    <bean id="deleteReviewSQL" class="java.lang.String">
        <constructor-arg value="delete from review
                                where movie_id = ?
                                and user_id = ?"/>
    </bean>

    <bean id="checkRatingExistSQL" class="java.lang.String">
        <constructor-arg value="select count(*)
                                from rating_movie
                                where movie_id = ?
                                and user_id = ?"/>
    </bean>

    <bean id="addRatingSQL" class="java.lang.String">
        <constructor-arg value="insert into rating_movie(movie_id, user_id, rating)
                                values(?, ?, ?)"/>
    </bean>


    <bean id="getTotalRatingSQL" class="java.lang.String">
        <constructor-arg value="select movie_id, sum(rating) sumrating, count(*) countrating
                                from rating_movie
                                group by movie_id"/>
    </bean>

    <bean id="getUserRatingForSQl" class="java.lang.String">
        <constructor-arg value="select rating
                                from rating_movie
                                where movie_id = ?
                                and user_id = ?"/>
    </bean>
</beans>